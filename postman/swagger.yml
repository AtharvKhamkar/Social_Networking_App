openapi: 3.0.0
info:
  title: Social_Networking_App
  version: 1.0.0
servers:
  - url: http://{{server}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: User
  - name: Posts
  - name: Follow
paths:
  /users/register:
    post:
      tags:
        - User
      summary: Register User
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Smit Gavare
                userName:
                  type: string
                  example: smitgavare_31
                email:
                  type: string
                  example: smitgavare2012@gmail.com
                password:
                  type: string
                  example: smit123
                bio:
                  type: string
                  example: Hey there  I am 10th student
                avatar:
                  type: string
                  format: binary
                coverImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/login:
    post:
      tags:
        - User
      summary: Login User
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  example: amulyagavare_31
                email:
                  type: string
                  example: amulyagavare2001@gmail.com
                password:
                  type: string
                  example: amulya123
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/logout:
    post:
      tags:
        - User
      summary: Logout User
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/delete-profile:
    delete:
      tags:
        - User
      summary: Delete User Profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/update-profile:
    put:
      tags:
        - User
      summary: Update Profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Amulya Gavare
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/profile:
    get:
      tags:
        - User
      summary: Profile Details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/followers:
    get:
      tags:
        - User
      summary: User Followers Details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/following:
    get:
      tags:
        - User
      summary: User Following Details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/user-posts:
    get:
      tags:
        - User
      summary: User Posts
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/:
    get:
      tags:
        - User
      summary: User Feed
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/upload:
    post:
      tags:
        - Posts
      summary: Upload Post
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Keep calm and let your psychology degree do the talking.
                content:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/update/{Id}:
    put:
      tags:
        - Posts
      summary: Update Post
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: >-
                    Hey  I am amulya gavare.I am MA student.I research on human
                    psychology
                content:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Id
          in: path
          schema:
            type: string
          required: true
          example: 65ec76f6b4418ce79a6a3742
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/delete/{Id}:
    delete:
      tags:
        - Posts
      summary: Delete Post
      security:
        - bearerAuth: []
      parameters:
        - name: Id
          in: path
          schema:
            type: string
          required: true
          example: 65ec76f6b4418ce79a6a3742
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /follow/add-follower/{Id}:
    post:
      tags:
        - Follow
      summary: Add Follower
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Id
          in: path
          schema:
            type: string
          required: true
          example: 65eb51127a321e86e09dfb93
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /follow/unfollow/{Id}:
    delete:
      tags:
        - Follow
      summary: Unfollow User
      security:
        - bearerAuth: []
      parameters:
        - name: Id
          in: path
          schema:
            type: string
          required: true
          example: 65eb51127a321e86e09dfb93
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
